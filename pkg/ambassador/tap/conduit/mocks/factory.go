// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/ambassador/tap/conduit/factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/nordix/meridio/api/nsp/v1"
	stream "github.com/nordix/meridio/pkg/ambassador/tap/stream"
	types "github.com/nordix/meridio/pkg/ambassador/tap/types"
)

// MockStreamFactory is a mock of StreamFactory interface.
type MockStreamFactory struct {
	ctrl     *gomock.Controller
	recorder *MockStreamFactoryMockRecorder
}

// MockStreamFactoryMockRecorder is the mock recorder for MockStreamFactory.
type MockStreamFactoryMockRecorder struct {
	mock *MockStreamFactory
}

// NewMockStreamFactory creates a new mock instance.
func NewMockStreamFactory(ctrl *gomock.Controller) *MockStreamFactory {
	mock := &MockStreamFactory{ctrl: ctrl}
	mock.recorder = &MockStreamFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStreamFactory) EXPECT() *MockStreamFactoryMockRecorder {
	return m.recorder
}

// New mocks base method.
func (m *MockStreamFactory) New(arg0 *v1.Stream, arg1 stream.Conduit) (types.Stream, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New", arg0, arg1)
	ret0, _ := ret[0].(types.Stream)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// New indicates an expected call of New.
func (mr *MockStreamFactoryMockRecorder) New(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockStreamFactory)(nil).New), arg0, arg1)
}
